name: Deploy to Vercel

on:
  push:
    branches:
      - main # or your deployment branch
  workflow_dispatch: {}

permissions:
  contents: write # Allow pushing back to this repository

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # to allow rewriting history if needed
          persist-credentials: true

      - name: Check triggering commit author
        id: check
        run: |
          AUTHOR_EMAIL=$(git log -1 --pretty=format:'%ae')
          echo "triggering author: $AUTHOR_EMAIL"
          # Set this to the email you want the workflow to recognize as "self-push"
          DEPLOY_EMAIL="anh1922000@gmail.com"
          if [ "$AUTHOR_EMAIL" = "$DEPLOY_EMAIL" ]; then
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Save current HEAD SHA
        id: save_old
        if: steps.check.outputs.skip != 'true'
        run: echo "old_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Set standard Git user info
        if: steps.check.outputs.skip != 'true'
        run: |
          git config --global user.name "nguyenngoc200"
          git config --global user.email "anh1922000@gmail.com"

      - name: Amend last commit author (optional)
        id: amend
        if: steps.check.outputs.skip != 'true'
        run: |
          OLD_SHA="${{ steps.save_old.outputs.old_sha }}"
          git commit --amend --reset-author --no-edit || echo "No changes to amend"
          NEW_SHA=$(git rev-parse HEAD)
          if [ "$NEW_SHA" = "$OLD_SHA" ]; then
            echo "amended=false" >> $GITHUB_OUTPUT
          else
            echo "amended=true" >> $GITHUB_OUTPUT
          fi

      - name: Push amended commit back
        if: steps.check.outputs.skip != 'true' && steps.amend.outputs.amended == 'true'
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:${TOKEN}@github.com/${{ github.repository }}.git
          git push --force

      - name: Setup Node.js
        if: steps.check.outputs.skip != 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        if: steps.check.outputs.skip != 'true'
        run: npm ci

      - name: Build
        if: steps.check.outputs.skip != 'true'
        run: npm run build --if-present

      - name: Deploy to Vercel
        if: steps.check.outputs.skip != 'true'
        run: npx vercel --prod --token "${{ secrets.VERCEL_TOKEN }}" --confirm
